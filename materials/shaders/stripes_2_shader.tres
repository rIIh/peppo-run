[gd_resource type="VisualShader" load_steps=22 format=3 uid="uid://co6nu2vdek7ac"]

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_livmf"]
function = 27

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_6cbdr"]
parameter_name = "Animation_Speed"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_rawbn"]
parameter_name = "Angle"
default_value_enabled = true
default_value = 45.0

[sub_resource type="VisualShaderNodeParameterRef" id="VisualShaderNodeParameterRef_333pp"]
parameter_name = "Stripe_Bias"

[sub_resource type="VisualShaderNodeParameterRef" id="VisualShaderNodeParameterRef_ece8f"]
parameter_name = "Angle"

[sub_resource type="VisualShaderNodeParameterRef" id="VisualShaderNodeParameterRef_kveok"]
parameter_name = "Animation_Speed"

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_063dq"]
parameter_name = "Color1"
default_value_enabled = true

[sub_resource type="VisualShaderNodeParameterRef" id="VisualShaderNodeParameterRef_m81vy"]
parameter_name = "Color1"
param_type = 8

[sub_resource type="VisualShaderNodeParameterRef" id="VisualShaderNodeParameterRef_lfoo1"]
parameter_name = "Color2"
param_type = 8

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_5y6v8"]
parameter_name = "Color2"
default_value_enabled = true
default_value = Color(0, 0, 0, 1)

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_q6ktt"]
parameter_name = "Stripe_Density"
hint = 1
min = 1.0
max = 5.0
default_value_enabled = true
default_value = 2.0

[sub_resource type="VisualShaderNodeParameterRef" id="VisualShaderNodeParameterRef_2yag2"]
parameter_name = "Stripe_Density"

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_bj70x"]
function = 14

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_a3hry"]
operator = 4

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_sxxqf"]
size = Vector2(680, 420)
expression = "float ratio = TEXTURE_PIXEL_SIZE.y / TEXTURE_PIXEL_SIZE.x;
float scale_ratio = FRAG_POINT_SIZE.x / FRAG_POINT_SIZE.y;
ratio *= scale_ratio;

vec2 bla = LOCAL_COORD.xy * TEXTURE_PIXEL_SIZE;
w = cos(angle) * bla.x + sin(angle) * bla.y / ratio - speed * TIME;
w *= scale;"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_8i4gy"]
parameter_name = "Stripe_Bias"
hint = 1
max = 3.0
default_value_enabled = true
default_value = 2.0

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_1ovcd"]
default_input_values = [0, 0.0, 1, 0.0, 2, 0.001, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeVaryingSetter" id="VisualShaderNodeVaryingSetter_eh7uh"]
varying_name = "LOCAL_COORD"
varying_type = 3

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_b0lt5"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVaryingSetter" id="VisualShaderNodeVaryingSetter_ws2mr"]
varying_name = "FRAG_POINT_SIZE"
varying_type = 3

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_e3mqh"]
size = Vector2(1000, 300)
expression = "world_scale = vec3(
    length(vec3(MODEL_MATRIX[0].x, MODEL_MATRIX[1].x, MODEL_MATRIX[2].x)), // scale x axis
    length(vec3(MODEL_MATRIX[0].y, MODEL_MATRIX[1].y, MODEL_MATRIX[2].y)), // scale y axis
    length(vec3(MODEL_MATRIX[0].z, MODEL_MATRIX[1].z, MODEL_MATRIX[2].z))  // scale z axis
);"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform float Stripe_Bias : hint_range(0, 3) = 2;
uniform float Animation_Speed;
uniform float Angle = 45;
uniform vec4 Color1 : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
uniform vec4 Color2 : source_color = vec4(0.000000, 0.000000, 0.000000, 1.000000);
uniform float Stripe_Density : hint_range(1, 5) = 2;

// Varyings
varying vec2 LOCAL_COORD;
varying vec2 FRAG_POINT_SIZE;




void vertex() {
// Input:3
	vec2 n_out3p0 = VERTEX;


// VaryingSetter:2
	LOCAL_COORD = n_out3p0;


	vec3 n_out7p0;
// Expression:7
	n_out7p0 = vec3(0.0, 0.0, 0.0);
	{
		n_out7p0 = vec3(
		    length(vec3(MODEL_MATRIX[0].x, MODEL_MATRIX[1].x, MODEL_MATRIX[2].x)), // scale x axis
		    length(vec3(MODEL_MATRIX[0].y, MODEL_MATRIX[1].y, MODEL_MATRIX[2].y)), // scale y axis
		    length(vec3(MODEL_MATRIX[0].z, MODEL_MATRIX[1].z, MODEL_MATRIX[2].z))  // scale z axis
		);
	}


// VaryingSetter:4
	FRAG_POINT_SIZE = vec2(n_out7p0.xy);


}

void fragment() {
// ParameterRef:17
	float n_out17p0 = Angle;


// FloatFunc:13
	float n_out13p0 = radians(n_out17p0);


// ParameterRef:18
	float n_out18p0 = Animation_Speed;


// ParameterRef:25
	float n_out25p0 = Stripe_Density;


	float n_out5p0;
// Expression:5
	n_out5p0 = 0.0;
	{
		float ratio = TEXTURE_PIXEL_SIZE.y / TEXTURE_PIXEL_SIZE.x;
		float scale_ratio = FRAG_POINT_SIZE.x / FRAG_POINT_SIZE.y;
		ratio *= scale_ratio;
		
		vec2 bla = LOCAL_COORD.xy * TEXTURE_PIXEL_SIZE;
		n_out5p0 = cos(n_out13p0) * bla.x + sin(n_out13p0) * bla.y / ratio - n_out18p0 * TIME;
		n_out5p0 *= n_out25p0;
	}


// ParameterRef:16
	float n_out16p0 = Stripe_Bias;


// FloatOp:4
	float n_out4p0 = mod(n_out5p0, n_out16p0);


// FloatFunc:3
	float n_out3p0 = floor(n_out4p0);


// ParameterRef:22
	vec3 n_out22p0 = Color2.rgb;
	float n_out22p1 = Color2.a;


// ParameterRef:21
	vec3 n_out21p0 = Color1.rgb;
	float n_out21p1 = Color1.a;


	vec3 n_out7p0;
// If:7
	float n_in7p1 = 0.00000;
	float n_in7p2 = 0.00100;
	if(abs(n_out3p0 - n_in7p1) < n_in7p2)
	{
		n_out7p0 = n_out22p0;
	}
	else if(n_out3p0 < n_in7p1)
	{
		n_out7p0 = n_out22p0;
	}
	else
	{
		n_out7p0 = n_out21p0;
	}


// Output:0
	COLOR.rgb = n_out7p0;


}
"
mode = 1
flags/light_only = false
varyings/LOCAL_COORD = "0,3"
varyings/FRAG_POINT_SIZE = "0,3"
nodes/vertex/2/node = SubResource("VisualShaderNodeVaryingSetter_eh7uh")
nodes/vertex/2/position = Vector2(-860.909, 351.391)
nodes/vertex/3/node = SubResource("VisualShaderNodeInput_b0lt5")
nodes/vertex/3/position = Vector2(-1250.91, 375.937)
nodes/vertex/4/node = SubResource("VisualShaderNodeVaryingSetter_ws2mr")
nodes/vertex/4/position = Vector2(-824.546, 500.482)
nodes/vertex/7/node = SubResource("VisualShaderNodeExpression_e3mqh")
nodes/vertex/7/position = Vector2(-2020, 480)
nodes/vertex/7/size = Vector2(1000, 300)
nodes/vertex/7/input_ports = ""
nodes/vertex/7/output_ports = "0,4,world_scale;"
nodes/vertex/7/expression = "world_scale = vec3(
    length(vec3(MODEL_MATRIX[0].x, MODEL_MATRIX[1].x, MODEL_MATRIX[2].x)), // scale x axis
    length(vec3(MODEL_MATRIX[0].y, MODEL_MATRIX[1].y, MODEL_MATRIX[2].y)), // scale y axis
    length(vec3(MODEL_MATRIX[0].z, MODEL_MATRIX[1].z, MODEL_MATRIX[2].z))  // scale z axis
);"
nodes/vertex/connections = PackedInt32Array(3, 0, 2, 0, 7, 0, 4, 0)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatFunc_bj70x")
nodes/fragment/3/position = Vector2(-440, 240)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatOp_a3hry")
nodes/fragment/4/position = Vector2(-680, 220)
nodes/fragment/5/node = SubResource("VisualShaderNodeExpression_sxxqf")
nodes/fragment/5/position = Vector2(-1660, 200)
nodes/fragment/5/size = Vector2(680, 420)
nodes/fragment/5/input_ports = "0,0,angle;1,0,speed;2,0,scale;"
nodes/fragment/5/output_ports = "0,0,w;"
nodes/fragment/5/expression = "float ratio = TEXTURE_PIXEL_SIZE.y / TEXTURE_PIXEL_SIZE.x;
float scale_ratio = FRAG_POINT_SIZE.x / FRAG_POINT_SIZE.y;
ratio *= scale_ratio;

vec2 bla = LOCAL_COORD.xy * TEXTURE_PIXEL_SIZE;
w = cos(angle) * bla.x + sin(angle) * bla.y / ratio - speed * TIME;
w *= scale;"
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatParameter_8i4gy")
nodes/fragment/6/position = Vector2(-2760, 680)
nodes/fragment/7/node = SubResource("VisualShaderNodeIf_1ovcd")
nodes/fragment/7/position = Vector2(-182.606, 264.218)
nodes/fragment/13/node = SubResource("VisualShaderNodeFloatFunc_livmf")
nodes/fragment/13/position = Vector2(-1880, 220)
nodes/fragment/14/node = SubResource("VisualShaderNodeFloatParameter_6cbdr")
nodes/fragment/14/position = Vector2(-2760, 500)
nodes/fragment/15/node = SubResource("VisualShaderNodeFloatParameter_rawbn")
nodes/fragment/15/position = Vector2(-2760, 300)
nodes/fragment/16/node = SubResource("VisualShaderNodeParameterRef_333pp")
nodes/fragment/16/position = Vector2(-920, 340)
nodes/fragment/17/node = SubResource("VisualShaderNodeParameterRef_ece8f")
nodes/fragment/17/position = Vector2(-2100, 220)
nodes/fragment/18/node = SubResource("VisualShaderNodeParameterRef_kveok")
nodes/fragment/18/position = Vector2(-2100, 300)
nodes/fragment/19/node = SubResource("VisualShaderNodeColorParameter_063dq")
nodes/fragment/19/position = Vector2(-2480, 300)
nodes/fragment/21/node = SubResource("VisualShaderNodeParameterRef_m81vy")
nodes/fragment/21/position = Vector2(-580, 400)
nodes/fragment/22/node = SubResource("VisualShaderNodeParameterRef_lfoo1")
nodes/fragment/22/position = Vector2(-580, 520)
nodes/fragment/23/node = SubResource("VisualShaderNodeColorParameter_5y6v8")
nodes/fragment/23/position = Vector2(-2480, 500)
nodes/fragment/24/node = SubResource("VisualShaderNodeFloatParameter_q6ktt")
nodes/fragment/24/position = Vector2(-2760, 960)
nodes/fragment/25/node = SubResource("VisualShaderNodeParameterRef_2yag2")
nodes/fragment/25/position = Vector2(-2100, 380)
nodes/fragment/connections = PackedInt32Array(4, 0, 3, 0, 5, 0, 4, 0, 3, 0, 7, 0, 13, 0, 5, 0, 16, 0, 4, 1, 17, 0, 13, 0, 18, 0, 5, 1, 21, 0, 7, 4, 22, 0, 7, 5, 22, 0, 7, 3, 25, 0, 5, 2, 7, 0, 0, 0)
